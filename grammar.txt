S -> PROGRAM_START PROGRAM_BODY | PROGRAM_START BODY
PROGRAM_START -> PROGRAM PROGRAM_NAME
PROGRAM_NAME -> WORD SEMICOLON
PROGRAM_BODY -> VARIABLE_SECTION BODY
VARIABLE_SECTION -> VAR VARIABLES | Var
VARIABLES -> VARIABLES VARIABLES | DECLARE_VAR DECLARE_TYPE
DECLARE_VAR -> VAR_NAME COLON
DECLARE_TYPE -> TYPE SEMICOLON
VAR_NAME -> word | VAR_NAME VAR_MULTI
VAR_MULTI -> COMMA VAR_NAME
TYPE -> int | char | real | ARR_1DIM OF_T | ARR_2DIM OF_T
TYPE_PRIMITIVE -> int | char | real
ARR_1DIM -> ARR_1DIM_OPEN ARR_1DIM_CLOSE
ARR_1DIM_OPEN -> ARR SQUARE_OBRACKET 
ARR_1DIM_CLOSE -> DIM SQUARE_CBRACKET
DIM -> C_P P_C
C_P -> CONSTANT PERIOD
P_C -> PERIOD CONSTANT
OF_T -> OF TYPE_PRIMITIVE
ARR_2DIM -> ARR_2DIM_OPEN ARR_2DIM_CLOSE
ARR_2DIM_OPEN -> ARR SQUARE_OBRACKET
ARR_2DIM_CLOSE -> 2DIM SQUARE_CBRACKET
2DIM -> DIM DIM_LAST
DIM_LAST -> COMMA DIM
BODY -> CONTENT PERIOD
CONTENT -> BEGIN ALGORITHM_END | BEGIN END
ALGORITHM_END -> ALGORITHM END 
ALGORITHM -> ALGORITHM ALGORITHM | IF_CONTENT SEMICOLON | IF_CONTENT ELSE_STATEMENT | IF_CONTENT ELIF_STATEMENT | WHILE_CONTENT SEMICOLON | FOR_CONTENT SEMICOLON | REPEAT_ALGO REPEAT_END | OPERATOR SEMICOLON
IF_STATEMENT -> IF_CONTENT SEMICOLON | IF_CONTENT ELSE_STATEMENT | IF_CONTENT ELIF_STATEMENT
IF_CONTENT -> IF_CONDITION THEN_CONTENT
ELSE_STATEMENT -> ELSE_CONTENT SEMICOLON | ELSE IF_STATEMENT
ELSE_CONTENT -> ELSE THEN_CONTENT
IF_CONDITION -> IF CONDITION
THEN_CONTENT -> THEN CONTENT
WHILE_CONTENT -> WHILE_CONDITION DO_CONTENT
WHILE_CONDITION -> WHILE CONDITION
DO_CONTENT -> DO CONTENT
REPEAT_ALGO -> REPEAT ALGORITHM
REPEAT_END -> UNTIL_CON SEMICOLON
UNTIL_CON -> UNTIL CONDITION
FOR_CONTENT -> FOR_ALGORITHM CONTENT
FOR_ALGORITHM -> FOR TYPE_FOR
TYPE_FOR -> FOR TYPE_FOR | FOR_1 DO | FOR_2 DO | FOR_3 DO | FOR_4 DO
FOR_1 -> EQUAL_WORD TO_CONSTANT
FOR_2 -> EQUAL_WORD DOWNTO_CONSTANT
FOR_3 -> EQUAL_WORD STEP_TO
FOR_4 -> EQUAL_WORD STEP_DOWNTO
STEP_TO -> TO_CONSTANT STEP_CONSTANT 
STEP_DOWNTO -> DOWNTO_CONSTANT STEP_CONSTANT
EQUAL_WORD -> EXPRESSION ASSIGN
TO_CONSTANT -> TO EXPRESSION
DOWNTO_CONSTANT -> DOWNTO EXPRESSION
STEP_CONSTANT -> STEP EXPRESSION
OPERATOR -> INPUT PARENTHESS_W | OUTPUT PARENTHESS_W | WORD ASSIGN
PARENTHESS_W -> OPEN_WORD CBRACKET
OPEN_WORD -> OBRACKET WORD 
ASSIGN -> ASSIGN_SYMBOL EXPRESSION
ASSIGN_SYMBOL -> COLON EQUAL
EXPRESSION -> word | constant | OBRACKET CLOSE_EXP | EXPRESSION ARITHMATIC_EXP
CLOSE_EXP -> EXPRESSION CBRACKET
ARITHMATIC_EXP -> ARITHMATIC_OP EXPRESSION
CONDITION -> OBRACKET CLOSE_C | CONDITION LOGICAL_CON | EXPRESSION RELATIONAL_EXP 
LOGICAL_CON -> LOGICAL_OP CONDITION
CLOSE_C -> CONDITION CBRACKET
RELATIONAL_EXP -> RELATIONAL_OP EXPRESSION
ARITHMATIC_OP -> - | + | * | / | %
LOGICAL_OP -> and | or
RELATIONAL_OP -> = | > | < | GREATER EQUAL | LESS EQUAL | LESS GREATER
PROGRAM -> Program
VAR -> Var
BEGIN -> Begin
END -> End
ARR -> array
OF -> of
IF -> If
THEN -> then
ELSE -> else
WHILE -> While
DO -> do
FOR -> For
REPEAT -> Repeat
UNTIL -> until
TO -> to
DOWNTO -> downto
INPUT -> Input
OUTPUT -> Output
WORD -> word
CONSTANT -> constant
STEP -> step
COLON -> :
SEMICOLON -> ;
COMMA -> ,
PERIOD -> .
SQUARE_OBRACKET -> [
SQUARE_CBRACKET -> ]
OBRACKET -> (
CBRACKET -> )
EQUAL -> =
GREATER -> >
LESS -> <
